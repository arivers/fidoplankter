library(RMySQL)#
library(lattice)#
drv = dbDriver("MySQL")#
con = dbConnect(drv, dbname = "oil_spill",user = "Adam", password ="mamblast", host = "mamblast.marsci.uga.edu")#
#
#ko<-"K08684"#
#koname<-"methane monooxygenase"#
#ko<-"K00496"#
#koname<-"alkane-1-monooxygenase"#
ko<-"K03738"#
koname<-"aldehyde ferriodoxin oxidoreductase"#
#Create a list of all the hits in the kegg database to queries from refseq for a particular kegg category#
	query<-paste("SELECT working_xtab2.taxid, working_xtab2.gi, working_xtab2.chxt, working_xtab2.chxu,working_xtab2.chxw, working_xtab2.chxx, kegg.ko, kegg.orgid,keggblast.HitDesc FROM kegg,keggblast,working_xtab2 WHERE kegg.ko='",ko,"' AND kegg.orgid=keggblast.hitName  AND keggblast.gi=working_xtab2.gi;", sep="")#
	data<-dbGetQuery(con,query)#
#get the unique gis hitting that KO	#
	gi<-unique(data$gi)#
	# pull out the cross tabulation data for the reads mapping to refseq reads#
	data2<-NULL#
	data2<-as.data.frame(data2)#
	for (i in 1:length(gi)){#
		query<-paste("SELECT working_xtab2.gi,working_xtab2.domain, working_xtab2.taxid, working_xtab2.chxt, working_xtab2.chxw, working_xtab2.chxu, working_xtab2.chxx from working_xtab2 where working_xtab2.gi=",gi[i],";")#
		data2<-rbind(data2,dbGetQuery(con,query))#
		}#
	# pull out the annotatio for the reads mapping to refseq reads#
#
# this functio deletes charaters allowing me to shoren my exedingly long refseq lines#
delchars = function(str,n,lead=TRUE){ #
    dots = paste(rep('.',n),collapse='') #
  pat = if(lead)paste('^',dots,sep='') else paste(dots,'$',sep='') #
  sub(pat,'',str) #
  } #
#
		data3<-NULL#
		for (i in 1:length(gi)){#
		query<-paste("SELECT refseq.hitDesc from refseq where refseq.gi=",gi[i],"limit 1;")#
		data3[i]<-delchars(dbGetQuery(con,query), 100)#
		}#
		data3<-unlist(data3)#
#merge the crosstabulation and annotation:#
#
data4<-cbind(data2,data3)#
#
require(reshape) #
data4<-data4[order(data4$chxt+data4$chxx+data4$chxw+data4$chxu,decreasing=T),]#
data4<-data4[1:30,]#
data4$rank<-seq(1,dim(data4)[1])#
df<- melt(data4[1:30,],id=c("gi","domain","data3","taxid","rank"))#
barchart(factor(reorder(data3,value,sum))~value ,groups=variable, data=df, stack=T, auto.key=F, col=c("orange","red","darkred","blue"), main=koname)
library(RMySQL)#
library(lattice)#
drv = dbDriver("MySQL")#
con = dbConnect(drv, dbname = "oil_spill",user = "Adam", password ="mamblast", host = "mamblast.marsci.uga.edu")#
#
#ko<-"K08684"#
#koname<-"methane monooxygenase"#
#ko<-"K00496"#
#koname<-"alkane-1-monooxygenase"#
ko<-"K01637"#
koname<-"isocitrate lyase"#
#Create a list of all the hits in the kegg database to queries from refseq for a particular kegg category#
	query<-paste("SELECT working_xtab2.taxid, working_xtab2.gi, working_xtab2.chxt, working_xtab2.chxu,working_xtab2.chxw, working_xtab2.chxx, kegg.ko, kegg.orgid,keggblast.HitDesc FROM kegg,keggblast,working_xtab2 WHERE kegg.ko='",ko,"' AND kegg.orgid=keggblast.hitName  AND keggblast.gi=working_xtab2.gi;", sep="")#
	data<-dbGetQuery(con,query)#
#get the unique gis hitting that KO	#
	gi<-unique(data$gi)#
	# pull out the cross tabulation data for the reads mapping to refseq reads#
	data2<-NULL#
	data2<-as.data.frame(data2)#
	for (i in 1:length(gi)){#
		query<-paste("SELECT working_xtab2.gi,working_xtab2.domain, working_xtab2.taxid, working_xtab2.chxt, working_xtab2.chxw, working_xtab2.chxu, working_xtab2.chxx from working_xtab2 where working_xtab2.gi=",gi[i],";")#
		data2<-rbind(data2,dbGetQuery(con,query))#
		}#
	# pull out the annotatio for the reads mapping to refseq reads#
#
# this functio deletes charaters allowing me to shoren my exedingly long refseq lines#
delchars = function(str,n,lead=TRUE){ #
    dots = paste(rep('.',n),collapse='') #
  pat = if(lead)paste('^',dots,sep='') else paste(dots,'$',sep='') #
  sub(pat,'',str) #
  } #
#
		data3<-NULL#
		for (i in 1:length(gi)){#
		query<-paste("SELECT refseq.hitDesc from refseq where refseq.gi=",gi[i],"limit 1;")#
		data3[i]<-delchars(dbGetQuery(con,query), 100)#
		}#
		data3<-unlist(data3)#
#merge the crosstabulation and annotation:#
#
data4<-cbind(data2,data3)#
#
require(reshape) #
data4<-data4[order(data4$chxt+data4$chxx+data4$chxw+data4$chxu,decreasing=T),]#
data4<-data4[1:30,]#
data4$rank<-seq(1,dim(data4)[1])#
df<- melt(data4[1:30,],id=c("gi","domain","data3","taxid","rank"))#
barchart(factor(reorder(data3,value,sum))~value ,groups=variable, data=df, stack=T, auto.key=F, col=c("orange","red","darkred","blue"), main=koname)
require(network)
install.packages("statnet")
m <- matrix(rbinom(25,1,.4),5,5)#
diag(m) <- 0#
g <- network(m, directed=FALSE)#
summary(g)
plot.network(g)
install.packages("statnet")
install.packages("degreenet")
install.packages("netperm")
install.packages("latentnet")
install.packages("statnet", repos="http://www.csde.washington.edu/statnet")
require(vegan)#
require(RColorBrewer)#
require(reshape)#
library(RMySQL)#
drv = dbDriver("MySQL")#
con = dbConnect(drv, dbname = "oil_spill",user = "Adam", password ="mamblast", host ="mamblast.marsci.uga.edu")
claculate nmds for refseq data#
workingxtab2<- dbReadTable(con,'working_xtab2')#
workingxtab2<-workingxtab2[workingxtab2$domain!='E' & workingxtab2$domain!='V',] #23,934,568 reads 593,007 genes#
rownames(workingxtab2)<-workingxtab2$gi#
workingxtab2<-workingxtab2[-1:-3]#
workingxtab2.mat<-as.matrix(workingxtab2)#
workingxtab2.mat<-t(workingxtab2.mat)#
rownames(workingxtab2.mat)<-c("X16.4","X52.4","X16.5","X52.1")#
pt<- prop.table(workingxtab2.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)#
#mds.trans<-metaMDS(workingxtab2.mat, distance="morisita")#
env.t<-env[c(3, 4, 13, 14),]#
env.t<-env[rownames(workingxtab2.mat),]#
ef.t<- envfit(mds.trans,env.t,permu=10000, na.rm=T)#
####ploting the NMDS  data#
pdf(file="nmds-combined.pdf",width=7,height=4)#
par(mfrow=c(1,2))#
#plotNMDS for pyrotag data#
plot(mds.trans,type="n",display="sites")#
abline(v=0,lty=3)#
abline(h=0,lty=3)#
#new colors highligting transcrptomics samples#
ptSty.t<-c(15,16,17,18)#
plume.t<-c("orange","red","darkred","blue")#
plot(ef.t,p.max=.1, pch=.7,col="grey60")#
points(mds.trans,cex=1, col=plume.t, pch=ptSty.t)#
text(mds.trans,labels=c("16.4","52.4","16.5","52.1"),col=plume.t,pch=ptSty,pos=3,cex=.7)
plot(mds.trans,type="n",display="sites")
plot(mds.trans,type="t",display="sites")
plot(mds.trans,type="t",display="species")
plot(mds.trans,type="p",display="species")
summary(mds.trans)
head(mds.trans$species)
contourplot()
Annotating a filled contour plot#
a <- expand.grid(1:20, 1:20)#
b <- matrix(a[,1] + a[,2], 20)#
filled.contour(x = 1:20, y = 1:20, z = b,#
               plot.axes={ axis(1); axis(2); points(10,10) })
A largish data set#
  n <- 10000#
  x1  <- matrix(rnorm(n), ncol=2)#
  x2  <- matrix(rnorm(n, mean=3, sd=1.5), ncol=2)#
  x   <- rbind(x1,x2)#
#
  oldpar <- par(mfrow=c(2,2))#
  smoothScatter(x, nrpoints=0)#
  smoothScatter(x)
smoothScatter(mds.trans$species$MDS1, mds.trans$species$MDS2)
class(mds.trans$species)
smoothScatter(mds.trans$species[,1], mds.trans$species[,2])
mds.trans
mds.trans$points
plot(mds.trans,type="t",display="sites")
workingxtab2<- dbReadTable(con,'working_xtab2')#
workingxtab2<-workingxtab2[workingxtab2$domain='E' ,] #23,934,568 reads 593,007 genes#
rownames(workingxtab2)<-workingxtab2$gi#
workingxtab2<-workingxtab2[-1:-3]#
workingxtab2.mat<-as.matrix(workingxtab2)#
workingxtab2.mat<-t(workingxtab2.mat)#
rownames(workingxtab2.mat)<-c("X16.4","X52.4","X16.5","X52.1")#
pt<- prop.table(workingxtab2.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t",display="sites")
plot(mds.trans,type="p",display="sites")
plot(mds.trans,type="t",display="sites")
smoothScatter(mds.trans$species[,1], mds.trans$species[,2])
head(workingxtab2)
workingxtab2<- dbReadTable(con,'working_xtab2')#
workingxtab2<-workingxtab2[workingxtab2$domain!='E' & workingxtab2$domain!='V',] #23,934,568 reads 593,007 genes#
rownames(workingxtab2)<-workingxtab2$gi#
workingxtab2<-workingxtab2[-1:-3]
head(workingxtab2)
dim(workingxtab2)
workingxtab2<- dbReadTable(con,'working_xtab2')#
workingxtab2<-workingxtab2[workingxtab2$domain!='E' & workingxtab2$domain!='V',] #23,934,568 reads 593,007 genes#
rownames(workingxtab2)<-workingxtab2$gi#
workingxtab3<-workingxtab2[rowSums(workingxtab2)>100,]
rowSums(workingxtab2[1:100,])
rowSums(workingxtab2[1:100,1:4])
rowSums(workingxtab2)
workingxtab2<- dbReadTable(con,'working_xtab2')#
workingxtab2<-workingxtab2[workingxtab2$domain!='E' & workingxtab2$domain!='V',] #23,934,568 reads 593,007 genes#
rownames(workingxtab2)<-workingxtab2$gi#
workingxtab3<-workingxtab2[rowSums(workingxtab2$chxt+workingxtab2$chxu+workingxtab2$chxw+workingxtab2$chxx+)>100,]
hear(workingxtab2)
head(workingxtab2)
workingxtab2<-workingxtab2[-1:-3]
head(workingxtab2)
workingxtab3<-workingxtab2[rowSums(workingxtab2)>100,]
head(workingxtab3)
dim(workingxtab3)
workingxtab2<-workingxtab2[rowSums(workingxtab2)>100,]#
workingxtab2.mat<-as.matrix(workingxtab2)#
workingxtab2.mat<-t(workingxtab2.mat)#
rownames(workingxtab2.mat)<-c("X16.4","X52.4","X16.5","X52.1")#
pt<- prop.table(workingxtab2.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t",display="sites")
workingxtab2<- dbReadTable(con,'working_xtab2')#
workingxtab2<-workingxtab2[workingxtab2$domain!='E' & workingxtab2$domain!='V',] #23,934,568 reads 593,007 genes#
rownames(workingxtab2)<-workingxtab2$gi#
workingxtab2<-workingxtab2[-1:-3]#
workingxtab2<-workingxtab2[rowSums(workingxtab2)>1000,]#
workingxtab2.mat<-as.matrix(workingxtab2)#
workingxtab2.mat<-t(workingxtab2.mat)#
rownames(workingxtab2.mat)<-c("X16.4","X52.4","X16.5","X52.1")#
pt<- prop.table(workingxtab2.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t",display="sites")
plot(mds.trans,type="t",display="species")
workingxtab2<- dbReadTable(con,'working_xtab2')#
workingxtab2<-workingxtab2[workingxtab2$domain!='E' & workingxtab2$domain!='V',] #23,934,568 reads 593,007 genes#
rownames(workingxtab2)<-workingxtab2$gi#
workingxtab2<-workingxtab2[-1:-3]#
workingxtab2<-workingxtab2[rowSums(workingxtab2)>5000,]#
workingxtab2.mat<-as.matrix(workingxtab2)#
workingxtab2.mat<-t(workingxtab2.mat)#
rownames(workingxtab2.mat)<-c("X16.4","X52.4","X16.5","X52.1")#
pt<- prop.table(workingxtab2.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t",display="species")
taxaxtab<- dbReadTable(con,'taxa_xtab')
head(taxaxtab)
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[-1,]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t",display="species")
plot(mds.trans,type="t")
head(taxatab)
head(taxaxtab)
taxaxtab<-taxaxtab[-1,]
head(taxaxtab)
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[,-1]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t")
taxaxtab<-taxaxtab[rowSums(tataxtab>1000),]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t")
dim(taxaxtab)
taxaxtab<-taxaxtab[rowSums(taxaxtab>1000),]
dim(taxaxtab)
taxaxtab<-taxaxtab[rowSums(taxaxtab>1000),]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[,-1]#
taxaxtab<-taxaxtab[rowSums(taxaxtab>1000),]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t")
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t")
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[,-1]#
taxaxtab<-taxaxtab[rowSums(taxaxtab<1000),]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t")
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[,-1]
dim(taxaxtab)
taxaxtab<-taxaxtab[rowSums(taxaxtab<1000),]
dim(taxaxtab)
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[,-1]#
taxaxtab<-taxaxtab[rowSums(taxaxtab)>1000,]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
dim(taxaxtab)
plot(mds.trans,type="t")
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[,-1]#
taxaxtab<-taxaxtab[rowSums(taxaxtab)>10000,]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
dim(taxaxtab)
plot(mds.trans,type="t")
taxaxtab<-taxaxtab[rowSums(taxaxtab<100000),]
plot(mds.trans,type="t")
dim(taxaxtab)
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[,-1]#
taxaxtab<-taxaxtab[rowSums(taxaxtab)>100000,]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t")
taxaxtab<- dbReadTable(con,'taxa_xtab')#
rownames(taxaxtab)<-taxaxtab$tax_id#
taxaxtab<-taxaxtab[,-1]#
taxaxtab<-taxaxtab[rowSums(taxaxtab)>300000,]#
taxaxtab.mat<-as.matrix(taxaxtab)#
taxaxtab.mat<-t(taxaxtab.mat)#
rownames(taxaxtab.mat)<-c("IP16","P52","P16","NP52")#
pt<- prop.table(taxaxtab.mat,1)#
#calculate NMDS from the dunifrac distance matrix#
mds.trans<-metaMDS(pt, distance="bray",autotransform = FALSE, trymax=100)
plot(mds.trans,type="t")
mds.trans$species
install.packages("statnet")
sessionInfo()
getOption("pkgType")
rm(list=ls())
library(igraph)
solids <- list(graph.famous("Tetrahedron"),#
               graph.famous("Cubical"),#
               graph.famous("Octahedron"),#
               graph.famous("Dodecahedron"),#
               graph.famous("Icosahedron"))
plot.igraph(solids)
plot.igraph(Cubical)
plotting a random graph, set the parameters in the command arguments#
g <- barabasi.game(100)#
plot(g, layout=layout.fruchterman.reingold, vertex.size=4,#
     vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
g
library(RMySQL)#
library(lattice)#
drv = dbDriver("MySQL")#
con = dbConnect(drv, dbname = "oil_spill",user = "Adam", password ="mamblast", host = "mamblast.marsci.uga.edu")#
#
ko<-"K00114"#
koname<-"PQQ alcohol dehydrogenase"#
#ko<-"K00496"#
#koname<-"alkane-1-monooxygenase"#
#ko<-"K00055"#
#koname<-"aryl-alcohol dehydrogenase"#
#Create a list of all the hits in the kegg database to queries from refseq for a particular kegg category#
	query<-paste("SELECT working_xtab2.taxid, working_xtab2.gi, working_xtab2.chxt, working_xtab2.chxu,working_xtab2.chxw, working_xtab2.chxx, kegg.ko, kegg.orgid,keggblast.HitDesc FROM kegg,keggblast,working_xtab2 WHERE kegg.ko='",ko,"' AND kegg.orgid=keggblast.hitName  AND keggblast.gi=working_xtab2.gi;", sep="")#
	data<-dbGetQuery(con,query)#
#get the unique gis hitting that KO	#
	gi<-unique(data$gi)#
	# pull out the cross tabulation data for the reads mapping to refseq reads#
	data2<-NULL#
	data2<-as.data.frame(data2)#
	for (i in 1:length(gi)){#
		query<-paste("SELECT working_xtab2.gi,working_xtab2.domain, working_xtab2.taxid, working_xtab2.chxt, working_xtab2.chxw, working_xtab2.chxu, working_xtab2.chxx from working_xtab2 where working_xtab2.gi=",gi[i],";")#
		data2<-rbind(data2,dbGetQuery(con,query))#
		}#
	# pull out the annotatio for the reads mapping to refseq reads#
#
# this functio deletes charaters allowing me to shoren my exedingly long refseq lines#
delchars = function(str,n,lead=TRUE){ #
    dots = paste(rep('.',n),collapse='') #
  pat = if(lead)paste('^',dots,sep='') else paste(dots,'$',sep='') #
  sub(pat,'',str) #
  } #
#
		data3<-NULL#
		for (i in 1:length(gi)){#
		query<-paste("SELECT refseq.hitDesc from refseq where refseq.gi=",gi[i],"limit 1;")#
		data3[i]<-delchars(dbGetQuery(con,query), 100)#
		}#
		data3<-unlist(data3)#
#merge the crosstabulation and annotation:#
#
data4<-cbind(data2,data3)
data4
require(reshape) #
data4<-data4[order(data4$chxt+data4$chxx+data4$chxw+data4$chxu,decreasing=T),]#
data4<-data4[1:30,]
data4
data4[,4:7]/c(2,2,2,2)
data4/c(NA,NA,NA,2,2,2,2,NA)
cbind(data4[,1:3],data4[,4:7]/c(2,2,2,2),data4[,8])
data4<-cbind(data2,data3)#
cbind(data4[,1:3],data4[,4:7]/c(6361608,7390122,15570175,7732731),data4[,8])#
#
require(reshape) #
data4<-data4[order(data4$chxt+data4$chxx+data4$chxw+data4$chxu,decreasing=T),]#
data4<-data4[1:30,]#
data4$rank<-seq(1,dim(data4)[1])#
df<- melt(data4[1:30,],id=c("gi","domain","data3","taxid","rank"))#
barchart(factor(reorder(data3,value,sum))~value ,groups=variable, data=df, stack=T, auto.key=F, col=c("orange","red","darkred","blue"), main=koname)
data4<-cbind(data4[,1:3],data4[,4:7]/c(6361608,7390122,15570175,7732731),data4[,8])#
#
require(reshape) #
data4<-data4[order(data4$chxt+data4$chxx+data4$chxw+data4$chxu,decreasing=T),]#
data4<-data4[1:30,]#
data4$rank<-seq(1,dim(data4)[1])#
df<- melt(data4[1:30,],id=c("gi","domain","data3","taxid","rank"))#
barchart(factor(reorder(data3,value,sum))~value ,groups=variable, data=df, stack=T, auto.key=F, col=c("orange","red","darkred","blue"), main=koname)
data4
names(data4)[8]<-data3#
require(reshape) #
data4<-data4[order(data4$chxt+data4$chxx+data4$chxw+data4$chxu,decreasing=T),]#
data4<-data4[1:30,]#
data4$rank<-seq(1,dim(data4)[1])#
df<- melt(data4[1:30,],id=c("gi","domain","data3","taxid","rank"))#
barchart(factor(reorder(data3,value,sum))~value ,groups=variable, data=df, stack=T, auto.key=F, col=c("orange","red","darkred","blue"), main=koname)
names(data4)[8]<-"data3"#
require(reshape) #
data4<-data4[order(data4$chxt+data4$chxx+data4$chxw+data4$chxu,decreasing=T),]#
data4<-data4[1:30,]#
data4$rank<-seq(1,dim(data4)[1])#
df<- melt(data4[1:30,],id=c("gi","domain","data3","taxid","rank"))#
barchart(factor(reorder(data3,value,sum))~value ,groups=variable, data=df, stack=T, auto.key=F, col=c("orange","red","darkred","blue"), main=koname)
data4
barchart(factor(reorder(data3,value,sum))~value ,groups=variable, data=df, stack=T, auto.key=F, col=c("orange","red","darkred","blue"), main=koname, ylab="proportion of reads in the sample")
barchart(factor(reorder(data3,value,sum))~value ,groups=variable, data=df, stack=T, auto.key=F, col=c("orange","red","darkred","blue"), main=koname, xlab="proportion of reads in the sample")
require(deSolve)
update.packages()
source("http://bioconductor.org/biocLite.R")#
old.packages(repos=biocinstallRepos())
source("http://bioconductor.org/biocLite.R")#
biocLite(character(), ask=FALSE)
library(Rycas)
library(Ryacas)
Rycas-gui
Ryacas-gui
install.packages("RSymPy")
install.packages("rSymPy")
library(rSymPy)
library(rSymPy)#
x <- Var("x")#
y <- x*x#
y
y
x
Krho	=	5.1E-10
Vmax	=	1276
R		=	5.6E-6; 	# m#
			D		=	9E-10;
r
R
D
V
Vmax
Krho
kdif 		<- 	4*pi*R*D*1000
rhomax  	<-  cellarea*Vmax/(86400*1E+9)
cellarea 	<- 	4*pi*R^2#
		kdif 		<- 	4*pi*R*D*1000#
		rhomax  	<-  cellarea*Vmax/(86400*1E+9) #vmax calculation L* s^-1
B			<-	(rhomax/kdif)+Fe+Krho
Fe<-1e-12
B			<-	(rhomax/kdif)+Fe+Krho
b
B
alpha<-1(1+kdif*Krho/rhomax)
alpha<-1/(1+kdif*Krho/rhomax)
alpha
Fe<-1e-9
alpha<-1/(1+kdif*Krho/rhomax)
alpha
staticbb<-function(d,edta,feedta,maxbiomass,light){#
	# Numerical constants#
khv 			<- 4.3E-6 						# s^-1 				FeEDTA photooxydation rate constant at 20C, 500 µE m^-2 s^-1 (Sunda2003)#
kd				<- 1.72E-6						# s^-1				FeEDTA dark dissociation rate cosntant at 20C (Sunda2003)#
kf				<- 17  							# L mol^-1 s^-1		The FeEDTA formation rate at 20C (Sunda2003)#
C.mol.per.vol	<- 15							# mol L of cell vol An estimate of moles Carbon per cel volume values from Sunda 2005#
kuprime 		<- 0.00259						# cm * s^-1			The uptake rate constant for Fe per unit of cell surface area. #
																	#Note that this differs from the Sunda (2005) value of 29 cm s-1 #
																	#but I calulclated it using data in Sunda and Huntsman (1995) bacasue #
																	#the origional value didn't work.#
#
# Calculated constants#
r				<- d/2 							# m					Cell radius#
kdprime			<- kd + (khv * light / 500)		# s^-1				The total FeEDTA dissociation rate#
vol.cell		<- (4/3) * pi *r^3 * 1000		# L cell^-1			Volume of an individual cell#
biomass.mol.est	<- vol.cell * C.mol.per.vol 	# mol cell^-1 		Moles of carbon per individual cell#
ku				<- kuprime *pi* d^2 *10		# L s^-1 cell^-1	Uptake rate constant for a cell of a specific diameter#
#
#generate a regularly spaced vector of values from 1 cell/L to the cell density equal to the maximum desired biomass value#
N				<- seq(from=1, to=(maxbiomass/(biomass.mol.est)), length.out=200) 	# cells L^-1#
#Calculate the Fe' for each cell concentration#
Feprime			<- kdprime * feedta / ((ku * N) + (kf * edta))						# mol L^-1				#
#
biomass			<- biomass.mol.est *N # biomass in mol C per L of culture#
#generate a log spaced vector of values from 1 cell/L to the cell density equal to the maximum desired biomass value#
Nlog			<- 10^(seq(from=log10(1), to=log10(maxbiomass/biomass.mol.est),length.out=200)) # cells L^-1#
#Calculate the Fe' for each cell concentration#
Feprimelog		<- kdprime * feedta / ((ku * Nlog) + (kf * edta))  					# mol L^-1#
#
data.frame(N,biomass,Feprime,Nlog,Feprimelog)#
}
staticbb(4e-6,1e-5,3e-9,0.0002,500)
require(bayseq)
require(BaySeq)
require(baySeq)
plotMA.CD
rm(list=ls())
require(deSolve)#
require(sfsmisc)#
source("ModelFunc.R")#
#
# Numerically esitmate phytoplankton growth, run Monte Carlo simulations and plot the results.#
## estimate growth at high resolution#
params <-c(	R		=	5.6E-6, 	# m#
			Qmax	=	1.9E-5,#
			Krho	=	5.1E-10, 	# mol * L^-1#
			Vmax	=	1276, 		#nmol m^-2 d^-1 from sunda and huntsman 1997#
			kfFeY	=	17,			# mol^-1 * sec^-1#
			kdFeY	=	1.72E-6,		# sec^-1#
			kfAFO1	=	4.1E+7,			# mol^-1 * sec^-1#
			kdAFO1	=	2.8E-2,		# sec^-1#
			kfAFO2	=	2E-6,#
			kdAFO2	=	2.12E-6,#
			koxFeII	=	6.2E-3,#
			khvFeY 	=	4.3E-6,#
			iue		=	0.98)#0.5712963 		#iron use effifiency mol C (mol Fe)^-1 s^-1,  coresponds to 500 uE, 14:10 	)#
#
# note starting values are from a kinetic model of media allowed to equilibrate for 24 hours. That model had the starting values: state <-c(Fe=0,FeII=0,FeY=3E-9,Y=1E-5,cells=1E3,Q=0,AFO1=0,AFO2=0)#
# state parameters of T weiss 1E-5, Y 3E-9 Fe#
state<-c(Fe=1.017e-10,FeII=2.067e-12,FeY=2.866e-09,Y=1e-5, cells=1E3, Q=1.245e-16, AFO1=1.778e-11, AFO2=1.447e-11)#
times <-seq(0,2000000,1000)#
out1<- as.data.frame(ode(state,times,dynamicbb,params,atol=1e-19))#
names(out1)[10:15]<-c("rho","mu","FeYflux", "FeIIflux", "AFO1flux", "AFO2flux")#
#
## Run uncerntainty analysis#
for (i in 1:1000){#
sc.R<- rnorm(1,mean=5.6E-6,sd=5.6E-7)#
while(sc.R<=0){sc.R<- rnorm(1,mean=5.6E-6,sd=5.6E-7)}#
#
sc.Qmax<- rnorm(1,mean=1.9E-5,sd=1.9E-6)#
while(sc.Qmax<=0){sc.R<- rnorm(1,mean=1.9E-5,sd=1.9E-6)}#
#
sc.Krho<-rnorm(1,mean=5.1E-10, sd=1.275E-10) #25%cv guess from data in from Sunda and Hntsman 1997#
while(sc.Krho<=0){sc.Krho<- rnorm(1,mean=5.1E-10, sd=1.275E-10)}#
#
sc.Vmax<-rnorm(1,mean=1276,sd=128)#
while(sc.Vmax<=0){sc.Vmax<-rnorm(1,mean=1276,sd=128)}#
#
sc.kfFeY<-rnorm(1,mean=17,sd=1.7) # from hudson 1992#
while(sc.kfFeY<=0){sc.kfFeY<-rnorm(1,mean=17,sd=1.7)}#
#
sc.kdFeY<-rnorm(1,mean=1.72E-6,sd=1.72E-7)# sunda 2003#
while(sc.kdFeY<=0){sc.kdFeY<-rnorm(1,mean=1.72E-6,sd=1.72E-7)}#from sunda 2003#
#
sc.kfAFO1<- rnorm(1,mean=4.1E+7,sd=1.1E+7)#cv=measured from rose and waite 2003#
while(sc.kfAFO1 <= 0) {sc.kfAFO1<- rnorm(1,mean=4.1E+7,sd=1.1E+7)}#
#
sc.kdAFO1<- rnorm(1,mean=2.8E-2, sd= 1.4E-2)#cv=50%#
while(sc.kdAFO1 <= 0){sc.kdAFO1<- rnorm(1,mean=2.8E-2, sd= 1.4E-2)}#
#
sc.kfAFO2<-rnorm(1,mean=2E-6,sd=2E-7)#
while(sc.kfAFO2<=0){sc.kfAFO2<-rnorm(1,mean=2E-6,sd=2E-7)}#
#
sc.kdAFO2<-rnorm(1,mean=2.12E-6,sd=2.12E-7) #
while(sc.kdAFO2<=0){sc.kdAFO2<-rnorm(1,mean=2.12E-6,sd=2.12E-7)} #cv10%#
#
sc.koxFeII<-rnorm(1,mean=6.2E-3, sd=3.1E-3)# from sunda 2003 ph 8.15 cv= 50%#
while(sc.koxFeII<=0){sc.koxFeII<-rnorm(1,mean=6.2E-3, sd=3.1E-3)}#
#
sc.khvFeY<-rnorm(1,mean=4.3e-6,sd=4.3e-7)#from sunda 2003 ph 8.15 cv=10%#
while(sc.khvFeY<=0){sc.khvFeY<-rnorm(1,mean=4.3e-6,sd=4.3e-7)}#
#
sc.iue<-rnorm(1,mean=0.98,sd=0.098)#from sunda 1997  cv=10%#
while(sc.iue<=0){sc.iue<-rnorm(1,mean=0.98,sd=0.098)}#
params <-c(	R		=	sc.R,		#5.6E-6, 	# m#
			Qmax	=	sc.Qmax,#
			Krho	=	sc.Krho,	#0.51E-9, 	# mol * L^-1#
			Vmax	=	sc.Vmax,	#1276, 		#nmol m^-2 d^-1 from sunda and huntsman 1997#
			kfFeY	=	sc.kfFeY,	#17,			# mol^-1 * sec^-1#
			kdFeY	=	sc.kdFeY,	#1.76E-6,		# sec^-1#
			kfAFO1	=	sc.kfAFO1,	#4.1E+7,			# mol^-1 * sec^-1#
			kdAFO1	=	sc.kdAFO1,	#2.8E-2,		# sec^-1#
			kfAFO2	=	sc.kfAFO2,	#2E-6,#
			kdAFO2	=	sc.kdAFO2,	#2.12E-6,#
			koxFeII	=	sc.koxFeII,	#6.2E-3,#
			khvFeY 	=	sc.khvFeY,	#4.3E-6		#s^-1#
			iue	 	=	sc.iue		#0.5712963 		#iron use effifiency mol C mol Fe-1 s-1,  coresponds to 500 uE, 14:10 		#
					)#
#
times <-seq(0,2000000,10000)#
times <-times[-1]#
times<- c(0,1000,5000,times)#
#
if(i==1){data<- as.data.frame(ode(state,times,dynamicbb,params,atol=1e-19))} else {temp <- as.data.frame(ode(state,times,dynamicbb,params,atol=1e-19))#
	data <- rbind(data,temp)}#
}#
# process the model output#
names(data)[10:15]<-c("rho","mu","FeYflux", "FeIIflux", "AFO1flux", "AFO2flux")#
cn<- colnames(data)#
times<-levels(factor(data$time))#
summ<-as.data.frame(times)#
names(summ)[1]<-"time"#
for (i in 2:length(cn)){#
col<-paste("data$",cn[i],sep="")#
col25name<-paste(cn[i],"25",sep="")#
col75name<-paste(cn[i],"75",sep="")#
col25<- as.data.frame(tapply(data[,i],data$time,quantile,prob=0.25))#
names(col25)[1]<-col25name#
summ<- cbind(summ,col25)#
col75<- as.data.frame(tapply(data[,i],data$time,quantile,prob=0.75))#
names(col75)[1]<-col75name#
summ<-cbind(summ,col75)#
}#
summ$time <- as.numeric(as.vector(summ$time))#
#
##plotting the results#
#
#data cleanup#
all<- out1#
summ<-summ[summ$time>0,]#
#
#calcultating buffer failure#
#
all$blown <- .90 >= all$Fe / max(all$Fe)#
allblown<-all[-1:-100,]#
allblown <-all[allblown$blown==T,]#
blowntime <- min(allblown$time)/86400#
#
#cut data with a cell density of more than 10,000 cells /mL#
all<-all[all$cells < 2e7, ]#
rono <-dim(all)[1]#
summ<-summ[summ$time < all$time[rono],]#
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,100,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n")#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,5E-13,label="C.", pos=4,cex=1.5)#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n")#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,8E-2,label="C.", pos=4,cex=1.5)#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n")#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,2E-2,label="C.", pos=4,cex=1.5)#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n")#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,2E-3,label="C.", pos=4,cex=1.5)#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n")#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,8E-3,label="C.", pos=4,cex=1.5)#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n")#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,8E-2,label="C.", pos=4,cex=1.5)#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
legend("left",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n")#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,8E-2,label="C.", pos=4,cex=1.5)#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,8E-2,label="C.", pos=4,cex=1.5)#
legend("left",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n", cex=0.8)#
#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,8E-2,label="C.", pos=4,cex=1.5)#
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n", cex=0.8)#
#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,8E-2,label="C.", pos=4,cex=1.5)#
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n", cex=0.8)#
#
dev.off()
pdf(file="fig2.pdf",width=4, height=9, family="Helvetica")#
par(mfrow=c(3,1))#
par(mar=c(2.1, 7.1, 4.1, 2.1))#
##CELLS#
plot(c(all$time/86400, summ$time/86400,summ$time/86400),c(all$cells/1000,summ$cells25/1000,summ$cells75/1000),log="y", ylab="", xlab="", type="n", bty="l",xaxt="n",ylim=c(1,1E5), axes=FALSE,frame=TRUE)#
 aY <- axTicks(2)#
 axis(2, at=aY, label= axTexpr(1, aY),las=2)#
 #axis(1)#
 mtext(expression(Cells~mL^-1), side=2, line=5)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$cells25/1000,rev(summ$cells75/1000))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
text(0,5E4,label="A.", pos=4,cex=1.5)#
lines(all$time/86400,all$cells/1000)#
 ##Fe Concentration plots#
 par(mar=c(2.1, 7.1, 0, 2.1))#
plot(c(all$time/86400,summ$time/86400,summ$time/86400),c(all$Fe*1e12,summ$Fe25*1e12,summ$Fe75*1e12),log ="y",ylab="",xlab="", type="n",bty="l",xaxt="n",ylim=c(2,2E2),axes=FALSE,frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$Fe25*1e12,rev(summ$Fe75*1E12))#
polygon(x,y,col="grey80",border=NA)#
abline(v=blowntime,lty="dotted")#
abline(h=7e-10, lty="dashed") # milero#
lines(all$time/86400,all$Fe*1E12)#
#aY <- axTicks(2)#
axis(2,las=1)#, at=aY, label= axTexpr(1, aY),las=2)#
#axis(1)  #
 #abline(h=, lty="dashed") # calculated fron sunda 2003#
#text(7,1E-9, label="Measured solubility limit")#
text(0,140,label="B.", pos=4,cex=1.5)#
mtext(expression("Fe(III)',"~pmol~L^-1), side=2, line=5,cex=0.8)#
#
###FLUX PLOTS#
 par(mar=c(4.1, 7.1, 0, 2.1))#
all$tfluxall	<- all$FeYflux + all$FeIIflux #+ all$AFO2flux +all$AFO1flux#
all$afoflux 	<- all$AFO2flux +all$AFO1flux#
summ$tflux25 	<- summ$FeYflux25 + summ$FeIIflux25 #+ summ$AFO2flux25 +summ$AFO1flux25#
summ$tflux75	<- summ$FeYflux75 + summ$FeIIflux75 #+ summ$AFO2flux75 +summ$AFO1flux75#
 plot(c(all$time/86400,all$time/86400,all$time/86400, all$time/86400,summ$time/86400),#
 c(all$tfluxall*1E+12,all$rho*all$cells*1E+12,all$FeYflux*1E+12,all$FeIIflux*1E+12,summ$tflux75*1E+12),#
  ylab="",#
  xlab="Time, d",#
  type="n",#
  bty="l",#
  log="y",#
  axes=FALSE,#
  frame=TRUE)#
x<- c(summ$time/86400,rev(summ$time/86400))#
y<- c(summ$rho25*summ$cells25*1E+12,rev(summ$rho75*summ$cells75*1E+12))#
polygon(x,y,col="grey80",border=NA)#
 x<- c(summ$time/86400,rev(summ$time/86400))#
 y<- c(summ$tflux25*1E+12,rev(summ$tflux75*1E+12))#
 polygon(x,y,col="grey50",border=NA)#
abline(v=blowntime,lty="dotted")#
 lines(all$time/86400,all$rho*all$cells*1E+12, col="black")#
 lines(all$time/86400,all$tfluxall*1E+12, col="black", lty=2)#
 lines(all$time/86400,all$FeYflux*1E+12, col="black",lty=3)#
 lines(all$time/86400,all$FeIIflux*1E+12 ,col="black",lty=4)#
aY <- axTicks(2)#
axis(2, at=aY, label= axTexpr(1, aY),las=2)#
axis(1) #
#
mtext(expression("Flux, pmol"~s^-1),side=2,line=5,cex=0.8)#
text(0,8E-3,label="C.", pos=4,cex=1.5)#
legend("bottomright",legend=c("Cellular uptake", "Total Fe flux","EDTA dissociation", "Fe(II) oxidation"),lty=c(1,2,3,4),lwd=1,bty="n", cex=0.8)#
#
dev.off()
